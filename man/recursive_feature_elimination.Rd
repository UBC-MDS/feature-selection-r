% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recursive_feature_elimination.R
\name{recursive_feature_elimination}
\alias{recursive_feature_elimination}
\title{Select features by Recursive Feature Elimination}
\usage{
recursive_feature_elimination(scorer, data, n_features_to_select)
}
\arguments{
\item{scorer}{A custom user-supplied function that accepts a data.frame
as input and returns the column name of the column with the lowest weight.}

\item{data}{A data.frame or tibble}

\item{n_features_to_select}{The target number of features.}
}
\value{
Vector of column names of non-eliminated features.
}
\description{
Feature selector that implements recursive feature elimination

Implements a greedy algorithm that iteratively calls the user-supplied
scorer function and eliminates features based on its return value.
}
\examples{
custom_scorer_fn <- function(data) {
  model <- lm(Y ~ ., data)
  names(which.min(model$coefficients[-1]))[[1]]
}
df <- tgp::friedman.1.data()
data <- dplyr::select(df, -Ytrue)
features <- featureselection::recursive_feature_elimination(custom_scorer_fn, data, 4)
# [1] "X1" "X2" "X4" "X5" "Y"
}
